// =======================================================================================
// Wovencore by Wovencode (c)
// =======================================================================================
using System;
using System.Collections.Generic;
using UnityEngine;
using woco.core;

namespace woco.core
{
	
	// ===================================================================================
	// _BaseManager
	// ===================================================================================
	[RequireComponent(typeof(GameManager))]
	public abstract partial class _BaseManager : MonoBehaviour
	{
	
		// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		// PROPERTIES
		// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		
		[Header("[DATATABLE]")]
		public TableData[] tableData;
		
		protected GameManager game;
		
		// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		// PUBLIC FUNCTIONS
		// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

		// -------------------------------------------------------------------------------
		// Awake
		// -------------------------------------------------------------------------------
		protected virtual void Awake()
		{
			game = GetComponentInParent<GameManager>();
		}		
		
		// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		// PUBLIC FUNCTIONS
		// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		
		// -------------------------------------------------------------------------------
		// getName
		// -------------------------------------------------------------------------------
		public string getName {
			get {
				return this.GetType().Name;
			}
		}
		
		// -------------------------------------------------------------------------------
		// getColumns
		// -------------------------------------------------------------------------------
		public string[] getColumns(int index=0)
		{
			return tableData[index].tableColumns;
		}
		
		// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		// EVENTS
		// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 

		// -------------------------------------------------------------------------------
		// OnReset
		// -------------------------------------------------------------------------------
		public abstract void OnReset();
		
		// -------------------------------------------------------------------------------
		// OnLoad
		// -------------------------------------------------------------------------------
		public abstract void OnLoad();
		
		// -------------------------------------------------------------------------------
		// OnSave
		// -------------------------------------------------------------------------------
		public virtual void OnSave()
		{
			game.saveManager.SaveData(OnData());
		}
		
		// -------------------------------------------------------------------------------
		// OnData
		// -------------------------------------------------------------------------------
		public abstract DataHolder OnData();
		
		// -------------------------------------------------------------------------------
	
	}
	
	// ===================================================================================
	
}
